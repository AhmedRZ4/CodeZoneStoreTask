// <auto-generated />
using CodeZoneStoreTask.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeZoneStoreTask.Migrations
{
    [DbContext(typeof(storeContext))]
    [Migration("20241204161901_mstore")]
    partial class mstore
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeZoneStoreTask.Models.Item", b =>
                {
                    b.Property<int>("itemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("itemId"));

                    b.Property<string>("itemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("itemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("CodeZoneStoreTask.Models.Purchase", b =>
                {
                    b.Property<int>("purchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("purchaseId"));

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.Property<int>("quantityP")
                        .HasColumnType("int");

                    b.Property<int>("storeId")
                        .HasColumnType("int");

                    b.HasKey("purchaseId");

                    b.HasIndex("itemId");

                    b.HasIndex("storeId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("CodeZoneStoreTask.Models.Sell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("purchaseId")
                        .HasColumnType("int");

                    b.Property<int>("quantityS")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("purchaseId");

                    b.ToTable("Sells");
                });

            modelBuilder.Entity("CodeZoneStoreTask.Models.Store", b =>
                {
                    b.Property<int>("storeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("storeId"));

                    b.Property<string>("storeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("storeId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("CodeZoneStoreTask.Models.Purchase", b =>
                {
                    b.HasOne("CodeZoneStoreTask.Models.Item", "Item")
                        .WithMany("Purchases")
                        .HasForeignKey("itemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeZoneStoreTask.Models.Store", "Store")
                        .WithMany("Purchases")
                        .HasForeignKey("storeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("CodeZoneStoreTask.Models.Sell", b =>
                {
                    b.HasOne("CodeZoneStoreTask.Models.Purchase", "Purchase")
                        .WithMany("Sells")
                        .HasForeignKey("purchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("CodeZoneStoreTask.Models.Item", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("CodeZoneStoreTask.Models.Purchase", b =>
                {
                    b.Navigation("Sells");
                });

            modelBuilder.Entity("CodeZoneStoreTask.Models.Store", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
